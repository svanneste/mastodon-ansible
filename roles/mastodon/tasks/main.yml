---

# Everything done before that is in mastodon_base

# Until there's a proper env var for the next fix
- name: horrible fix please ignore
  shell: git checkout config/database.yml chdir=/home/mastodon/live/
  when: pgbouncer_use

- name: clone mastodon
  git:
    repo: https://github.com/tootsuite/mastodon.git
    dest: /home/mastodon/live
    update: yes
    version: 470eb0042ea99e0632ccc62a0b7c01e910f70491
  become: yes
  become_user: mastodon
  notify: restart all

- name: quick fix please ignore
  lineinfile:
    dest: /home/mastodon/live/config/database.yml
    insertafter: '^  port: '
    line: '  prepared_statements: false'
  when: pgbouncer_use

- name: gem install
  gem:
    executable: /home/mastodon/.rbenv/versions/2.3.1/bin/gem
    name: bundler
    user_install: no
  become: yes
  become_user: mastodon

- name: rehash
  shell: /home/mastodon/.rbenv/bin/rbenv rehash
  become: yes
  become_user: mastodon

- name: bundle
  bundler:
    chdir: /home/mastodon/live/
    executable: /home/mastodon/.rbenv/versions/2.3.1/bin/bundle
    deployment_mode: yes
    exclude_groups: development test
  become: yes
  become_user: mastodon
  notify: restart all

- name: yarn
  shell: yarn install chdir=/home/mastodon/live/
  become: yes
  become_user: mastodon
  tags: [app]

- name: install production configuration
  template: src=env.production dest=/home/mastodon/live/.env.production
  become: yes
  become_user: mastodon
  tags: [app]
  notify: restart all

- name: run migrations
  shell: RAILS_ENV=production /home/mastodon/.rbenv/versions/2.3.1/bin/bundle exec rails db:migrate chdir=/home/mastodon/live/
  become: yes
  become_user: mastodon
  run_once: true
  tags: [app]

- name: precompile assets
  shell: RAILS_ENV=production /home/mastodon/.rbenv/versions/2.3.1/bin/bundle exec rails assets:precompile chdir=/home/mastodon/live/
  become: yes
  become_user: mastodon
  tags: [app]

- include: shared-media.yml
  when: "'web' in mroles_enabled"

- name: install systemd units
  template: src=mastodon-{{item}}.service dest=/etc/systemd/system/mastodon-{{item}}.service
  tags: [app]
  with_items:
  - "{{ mroles_files }}"
  notify: restart all

- name: enable units
  tags: [app]
  systemd: name=mastodon-{{item}} enabled=yes state=started
  with_items:
  - "{{ mroles_enabled }}"

- name: disable unused units
  tags: [app]
  systemd: name=mastodon-{{item}} enabled=no state=stopped
  when: item not in mroles_enabled
  with_items:
  - "{{ mroles_all }}"


