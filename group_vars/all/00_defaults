
domain: octodon.social

# Those are different vars than ansible's hostname, so you can use internal IPs here
redis_host: 
redis_password:
db_host: 
db_password:
app_hosts:

# Mastodon Scaling (c=workers, t=threads)
mweb_c: 4
mweb_t: 5
msidekiq_c: 40
msidekiq_pools: "{{msidekiq_c}}"

# Your secrets, those made with rake secrets
secrets_paperclip: 
secrets_key: 
secrets_otp: 

# Mastodon's mail stuff
mail_host: 
mail_port: 
mail_user: 
mail_password: 
mail_from: 

# Enable/disable using pgbouncer on sidekiq and app servers
# (doesn't require changing db_*, mastodon will connect to pgbouncer instead)
pgbouncer_use_sidekiq: true
pgbouncer_use_web: true

munin_hostname: "munin.{{domain}}"

media_host: 
media_path: /home/mastodon/live/public/system
minio_dl_url: https://dl.minio.io/server/minio/release/linux-amd64/minio
minio_data_dir: /home/minio/data/
minio_config_dir: /home/minio/config/
minio_bin: /usr/local/bin/minio
minio_access_key: 
minio_secret_key: 
minio_listen: 127.0.0.1:9000



########## Don't change stuff under this
# it's mostly defaults and constants

pgbouncer_port: 6432
pgbouncer_use: false

nodejs_version: "4.x"

# Enabled roles - any from mroles_all
# This is overriden by each group's group_vars file
mroles_enabled: 

mroles_all:
  - web
  - sidekiq  # kept here to disable it
  - sidekiq@0
  - sidekiq@1
  - sidekiq@2
  - sidekiq@3
  - streaming

mroles_files:
  - web
  - sidekiq@
  - streaming


certbot_challenges_dir: /var/www/challenges/
certbot_rsa_key_size: 4096
certbot_challenges_config: |
  location ^~ /.well-known/acme-challenge/ {
      root {{certbot_challenges_dir}};
  }
certbot_domains:


